generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String
  picture      String?
  tokens       JwtTokens[]
  sharedAlbums AlbumShares[]

  @@index([email])
}

model JwtTokens {
  id     String @id @default(uuid())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@index([userId])
}

model Image {
  id        String        @id @unique @default(uuid())
  userId    String
  name      String
  metadata  Json
  location  String
  createdAt DateTime      @default(now()) //upload time
  fileName  String
  tag       String?
  albums    AlbumImages[]
}

model Album {
  id         String        @id @unique @default(uuid())
  userId     String
  name       String
  createdAt  DateTime      @default(now())
  cover      String //cover picture name
  images     AlbumImages[]
  sharedWith AlbumShares[]
}

model AlbumImages {
  albumId String
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  imageId String
  image   Image  @relation(fields: [imageId], references: [id], onDelete: Cascade)

  @@id([albumId, imageId]) //composite primary key
  @@index([albumId])
  @@index([imageId])
}

model AlbumShares {
  albumId String
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, albumId])
  @@index([albumId])
  @@index([userId])
}
